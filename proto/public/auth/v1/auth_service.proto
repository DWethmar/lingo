syntax = "proto3";
package proto.public.auth.v1;
option go_package = "github.com/dwethmar/lingo/protogen/private/auth/v1;auth";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/field_behavior.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Lingo Auth API";
    version: "1.0";
    contact: {
      name: "lingo";
      url: "https://github.com/DWethmar/lingo";
      email: "denniswethmar@gmail.com";
    };
    license: {
      name: "MIT License"
      url: "https://github.com/DWethmar/lingo/blob/main/LICENSE";
    };
  };
  host: "localhost:8092";
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BasicAuth";
      value: {
        type: TYPE_BASIC;
      };
    };
    security: {
        key: "Bearer";
        value: {
            type: TYPE_API_KEY;
            name: "Authorization";
            in: IN_HEADER;
            description: "Enter the token with the `Bearer: ` prefix, e.g. Bearer abcde12345";
        };
    };
  };
};

service AuthService {
    rpc Register(RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/v1/auth/register"
            body: "*"
        };
    }
}

message RegisterRequest {
    string email = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The email of a user"},
        (google.api.field_behavior) = REQUIRED
    ];
    string username = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The username of a user"},
        (google.api.field_behavior) = REQUIRED
    ];
    string password = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The password of a user"},
        (google.api.field_behavior) = REQUIRED
    ];
}

message RegisterResponse{

}
