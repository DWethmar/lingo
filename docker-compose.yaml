version: "3.9"

services:
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8090:8080"
    volumes:
      - ./provision/swagger-ui/swagger-config.json:/swagger-config.json
      - ./protogen/openapiv2/proto/private/relay/v1/relay_service.swagger.yaml:/relay_service.swagger.yaml
    environment:
      CONFIG_URL: /swagger-config.json
      SWAGGER_JSON: /relay_service.swagger.yaml

  db:
    image: postgres:14.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres}
    ports:
      - "5431:5432"
    restart: unless-stopped
    volumes:
      - ./provision/postgres/01-databases.sql:/docker-entrypoint-initdb.d/01-databases.sql
    networks:
      - lingo-network

  relay-migration:
    image: arigaio/atlas:0.21.1
    container_name: lingo-relay-migrate
    command: migrate apply --url "postgres://postgres:postgres@db:5432/relay?sslmode=disable"
    volumes:
      - ./migrations:/migrations
    networks:
      - lingo-network
    depends_on:
      - db

  relay:
    image: lingo
    build:
      dockerfile: Dockerfile
      target: debug
    command: ["--", "serve", "relay"]
    environment:
      LINGO_DB_URL: postgres://postgres:postgres@db:5432/relay?sslmode=disable
      LINGO_GRPC_PORT: 8080
      LINGO_GRPC_TLS_CERT_FILE: /src/lingo/certs/grpc-lingo.crt
      LINGO_GRPC_TLS_KEY_FILE: /src/lingo/certs/grpc-lingo.key
      LINGO_SIGNING_KEY_REGISTRATION: ${LINGO_SIGNING_KEY_REGISTRATION:-}
      LINGO_SIGNING_KEY_AUTHENTICATION: ${LINGO_SIGNING_KEY_AUTHENTICATION:-}
    volumes:
      - ./certs/grpc-lingo.crt:/src/lingo/certs/grpc-lingo.crt
      - ./certs/grpc-lingo.key:/src/lingo/certs/grpc-lingo.key
    ports:
      - "8091:8080" # grpc
      - "2345:2345" # delve
    restart: unless-stopped
    depends_on:
      - db
      - relay-migration
    networks:
      - lingo-network

  gateway:
    image: lingo
    build:
      dockerfile: Dockerfile
      target: debug
    command: ["--", "serve", "gateway"]
    environment:
      LINGO_HTTP_PORT: 8081
      LINGO_RELAY_URL: relay:8080
      LINGO_HTTP_TLS_CERT_FILE: /src/lingo/certs/http-lingo.crt
      LINGO_HTTP_TLS_KEY_FILE: /src/lingo/certs/http-lingo.key
      LINGO_GRPC_TLS_CERT_FILE: /src/lingo/certs/grpc-lingo.crt
    volumes:
      - ./certs/http-lingo.crt:/src/lingo/certs/http-lingo.crt
      - ./certs/http-lingo.key:/src/lingo/certs/http-lingo.key
      - ./certs/grpc-lingo.crt:/src/lingo/certs/grpc-lingo.crt
    ports:
      - "8092:8081"
    depends_on:
      - relay
    networks:
      - lingo-network

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - 9090:9090
  #   restart: unless-stopped
  #   volumes:
  #     - ./provision/prometheus:/etc/prometheus
  #     - prom_data:/prometheus

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3000:3000
  #   restart: unless-stopped
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=grafana
  #   volumes:
  #     - ./provision/grafana:/etc/grafana/provisioning/datasources

volumes:
  prom_data:

networks:
  lingo-network:
    driver: bridge
